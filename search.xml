<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello</title>
    <url>/2022/04/27/Hello/</url>
    <content><![CDATA[<p>大家都围过来啊，都围过来啊。我宣布个事：我是个有趣的垃圾！</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1</span></span><br><span class="line">        <span class="comment">//2</span></span><br><span class="line">        <span class="comment">//3</span></span><br><span class="line">        <span class="comment">//4</span></span><br><span class="line">        <span class="comment">//5</span></span><br><span class="line">        <span class="comment">//6</span></span><br><span class="line">        <span class="comment">//7</span></span><br><span class="line">        <span class="comment">//8</span></span><br><span class="line">        <span class="comment">//9</span></span><br><span class="line">        <span class="comment">//10</span></span><br><span class="line">        <span class="comment">//11</span></span><br><span class="line">        <span class="comment">//12</span></span><br><span class="line">        <span class="comment">//13</span></span><br><span class="line">        <span class="comment">//14</span></span><br><span class="line">        <span class="comment">//15</span></span><br><span class="line">        <span class="comment">//16</span></span><br><span class="line">        <span class="comment">//17</span></span><br><span class="line">        <span class="comment">//18</span></span><br><span class="line">        <span class="comment">//19</span></span><br><span class="line">        <span class="comment">//20</span></span><br><span class="line">        System.out.println(<span class="string">&quot;我是个垃圾，呜呜呜!&quot;</span>);</span><br><span class="line">        <span class="comment">//21</span></span><br><span class="line">        <span class="comment">//22</span></span><br><span class="line">        <span class="comment">//23</span></span><br><span class="line">        <span class="comment">//24</span></span><br><span class="line">        <span class="comment">//25</span></span><br><span class="line">        <span class="comment">//26</span></span><br><span class="line">        <span class="comment">//27</span></span><br><span class="line">        <span class="comment">//28</span></span><br><span class="line">        <span class="comment">//29</span></span><br><span class="line">        <span class="comment">//30</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">        <span class="comment">//占位</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//嗯嗯，这只是占位用的，测试用的</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>垃圾</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/04/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>ccf-csp2013.12</title>
    <url>/2022/05/01/ccf-csp2013-12/</url>
    <content><![CDATA[<p><em>我终于想起这个<s>被我咕了将近半个月的</s> 任务了。。。从头开始做吧</em></p>
<h2 id="T1-（简单的循环模拟">T1 （简单的循环模拟</h2>
<blockquote>
<p>问题描述<br>
　　给定n个正整数，找出它们中出现次数最多的数。如果这样的数有多个，请输出其中最小的一个。<br>
输入格式<br>
　　输入的第一行只有一个正整数n(1 ≤ n ≤ 1000)，表示数字的个数。<br>
　　输入的第二行有n个整数s1, s2, …, sn (1 ≤ si ≤ 10000, 1 ≤ i ≤ n)。相邻的数用空格分隔。<br>
输出格式<br>
　　输出这n个次数中出现次数最多的数。如果这样的数有多个，输出其中最小的一个。<br>
样例输入<br>
6<br>
10 1 10 20 30 20<br>
样例输出<br>
10</p>
</blockquote>
<p>要注意的是当从大到小查结果时，将<code>a[i] &gt; ma </code> 改为<code>a[i] &gt;= ma</code>，还有别忘了更新<code>ma</code>…</p>
<p>满分代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, a[<span class="number">10002</span>], tmp, ma = <span class="number">0</span>, ans;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10000</span>; i++) a[i] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)	&#123;<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tmp);a[tmp]++;&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10000</span>; i++)</span><br><span class="line">		<span class="keyword">if</span>(a[i] &gt; ma)	ans = i, ma = a[i];</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T2-另一个简单的模拟">T2 (另一个简单的模拟</h2>
<blockquote>
<p>问题描述<br>
　　每一本正式出版的图书都有一个ISBN号码与之对应，ISBN码包括9位数字、1位识别码和3位分隔符，其规定格式如“x-xxx-xxxxx-x”，其中符号“-”是分隔符（键盘上的减号），最后一位是识别码，例如0-670-82162-4就是一个标准的ISBN码。ISBN码的首位数字表示书籍的出版语言，例如0代表英语；第一个分隔符“-”之后的三位数字代表出版社，例如670代表维京出版社；第二个分隔之后的五位数字代表该书在出版社的编号；最后一位为识别码。<br>
　　识别码的计算方法如下：<br>
　　首位数字乘以1加上次位数字乘以2……以此类推，用所得的结果mod 11，所得的余数即为识别码，如果余数为10，则识别码为大写字母X。例如ISBN号码0-670-82162-4中的识别码4是这样得到的：对067082162这9个数字，从左至右，分别乘以1，2，…，9，再求和，即0×1+6×2+……+2×9=158，然后取158 mod 11的结果4作为识别码。<br>
　　编写程序判断输入的ISBN号码中识别码是否正确，如果正确，则仅输出“Right”；如果错误，则输出是正确的ISBN号码。<br>
输入格式<br>
　　输入只有一行，是一个字符序列，表示一本书的ISBN号码（保证输入符合ISBN号码的格式要求）。<br>
输出格式<br>
　　输出一行，假如输入的ISBN号码的识别码正确，那么输出“Right”，否则，按照规定的格式，输出正确的ISBN号码（包括分隔符“-”）。<br>
样例输入<br>
0-670-82162-4<br>
样例输出<br>
Right<br>
样例输入<br>
0-670-82162-0<br>
样例输出<br>
0-670-82162-4</p>
</blockquote>
<p>注意最后一位是0~9或者X，所以对于%11后为10的情况要特殊处理</p>
<p>满分代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string str;</span><br><span class="line">	cin &gt;&gt; str;</span><br><span class="line">	<span class="type">char</span> end;</span><br><span class="line">	<span class="type">int</span> standard = <span class="number">0</span>, count = <span class="number">1</span>, len = str.<span class="built_in">length</span>();</span><br><span class="line">	<span class="comment">//0-670-82162-4</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">		<span class="keyword">if</span>(str[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">			standard += (str[i] - <span class="string">&#x27;0&#x27;</span>) * (count++);</span><br><span class="line">	standard %= <span class="number">11</span>;</span><br><span class="line">	<span class="keyword">if</span>(standard == <span class="number">10</span>)</span><br><span class="line">		end = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		end = standard + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="keyword">if</span>(end == str[len - <span class="number">1</span>])</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Right&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		str[len - <span class="number">1</span>] = end;</span><br><span class="line">		cout &lt;&lt; str;</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意下面两个都是错误的：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string str;</span><br><span class="line">	cin &gt;&gt; str;</span><br><span class="line"><span class="comment">//	char end;</span></span><br><span class="line">	<span class="type">int</span> standard = <span class="number">0</span>, count = <span class="number">1</span>, len = str.<span class="built_in">length</span>();</span><br><span class="line">	<span class="comment">//0-670-82162-4</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">		<span class="keyword">if</span>(str[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">			standard += (str[i] - <span class="string">&#x27;0&#x27;</span>) * (count++);</span><br><span class="line">	standard %= <span class="number">11</span>;</span><br><span class="line"><span class="comment">//	if(standard == 10)</span></span><br><span class="line"><span class="comment">//		end = &#x27;X&#x27;;</span></span><br><span class="line"><span class="comment">//	else</span></span><br><span class="line"><span class="comment">//		end = standard + &#x27;0&#x27;;</span></span><br><span class="line">	<span class="keyword">if</span>(standard == (str[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>))</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Right&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		str[len - <span class="number">1</span>] = standard + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		cout &lt;&lt; str;</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这个是因为完全忘掉了有X这回事</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string str;</span><br><span class="line">	cin &gt;&gt; str;</span><br><span class="line"><span class="comment">//	char end;</span></span><br><span class="line">	<span class="type">int</span> standard = <span class="number">0</span>, count = <span class="number">1</span>, len = str.<span class="built_in">length</span>();</span><br><span class="line">	<span class="comment">//0-670-82162-4</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">		<span class="keyword">if</span>(str[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">			standard += (str[i] - <span class="string">&#x27;0&#x27;</span>) * (count++);</span><br><span class="line">	standard %= <span class="number">11</span>;</span><br><span class="line"><span class="comment">//	if(standard == 10)</span></span><br><span class="line"><span class="comment">//		end = &#x27;X&#x27;;</span></span><br><span class="line"><span class="comment">//	else</span></span><br><span class="line"><span class="comment">//		end = standard + &#x27;0&#x27;;</span></span><br><span class="line">	<span class="keyword">if</span>(standard == (str[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>))</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Right&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(standard == <span class="number">10</span>)</span><br><span class="line">			str[len - <span class="number">1</span>] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">		<span class="keyword">else</span> </span><br><span class="line">			str[len - <span class="number">1</span>] = standard + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		cout &lt;&lt; str;</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这个是因为更改和X有关情况时值更改了else部分，上面的if判断会出错</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="T3-（单调不上升子序列">T3 （单调不上升子序列</h2>
<blockquote>
<p>问题描述<br>
　　在横轴上放了n个相邻的矩形，每个矩形的宽度是1，而第i（1 ≤ i ≤ n）个矩形的高度是hi。这n个矩形构成了一个直方图。例如，下图中六个矩形的高度就分别是3, 1, 6, 5, 2, 3。<br>
　　请找出能放在给定直方图里面积最大的矩形，它的边要与坐标轴平行。对于上面给出的例子，最大矩形如下图所示的阴影部分，面积是10。<br>
输入格式<br>
　　第一行包含一个整数n，即矩形的数量(1 ≤ n ≤ 1000)。<br>
　　第二行包含n 个整数h1, h2, … , hn，相邻的数之间由空格分隔。(1 ≤ hi ≤ 10000)。hi是第i个矩形的高度。<br>
输出格式<br>
　　输出一行，包含一个整数，即给定直方图内的最大矩形的面积。<br>
样例输入<br>
6<br>
3 1 6 5 2 3<br>
样例输出<br>
10</p>
</blockquote>
<p>显然，对于这个问题，每个矩形必然受最矮的柱形限制，所以我们可以对于每个柱形，向左右同时寻找单调不下降的柱形（指两端），保证这个柱形就是那个限制点</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, cnt, ans = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> h[<span class="number">10002</span>];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;h[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		cnt = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">1</span>; j--)&#123;</span><br><span class="line">			<span class="keyword">if</span>(h[j] &lt; h[i])</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			cnt ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = i; j&lt;= n; j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(h[j] &lt; h[i])</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			cnt ++;</span><br><span class="line">		&#125;</span><br><span class="line">		ans = <span class="built_in">max</span>(ans, cnt * h[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">感动</span></span><br><span class="line"><span class="comment">这是好久以来重新打代码之后的第一次一遍过</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="T4（又名：一个人可以有多么善变">T4（又名：一个人可以有多么善变</h2>
<blockquote>
<p>问题描述<br>
我们把一个数称为有趣的，当且仅当：<br>
1. 它的数字只包含0, 1, 2, 3，且这四个数字都出现过至少一次。<br>
2. 所有的0都出现在所有的1之前，而所有的2都出现在所有的3之前。<br>
3. 最高位数字不为0。<br>
因此，符合我们定义的最小的有趣的数是2013。除此以外，4位的有趣的数还有两个：2031和2301。<br>
请计算恰好有n位的有趣的数的个数。由于答案可能非常大，只需要输出答案除以1000000007的余数。<br>
输入格式<br>
输入只有一行，包括恰好一个正整数n (4 ≤ n ≤ 1000)。<br>
输出格式<br>
输出只有一行，包括恰好n 位的整数中有趣的数的个数除以1000000007的余数。<br>
样例输入<br>
4<br>
样例输出<br>
3</p>
</blockquote>
<h4 id="还没写，大致思路：">还没写，大致思路：</h4>
<ol>
<li>对于已经出现了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn></mrow><annotation encoding="application/x-tex">3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>的情况，对后面直接取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>A</mi><mtext>剩余位数</mtext><mn>3</mn></msubsup></mrow><annotation encoding="application/x-tex">A_{剩余位数}^{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0894em;vertical-align:-0.2753em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4247em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">剩余位数</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span></span></span></span></li>
<li>对于还没有出现<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn></mrow><annotation encoding="application/x-tex">3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>的情况，后面分为取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn></mrow><annotation encoding="application/x-tex">3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>和不取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn></mrow><annotation encoding="application/x-tex">3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>两种情况</li>
<li>对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>也是如此</li>
</ol>
<h4 id="我在干啥呢？？？？">我在干啥呢？？？？</h4>
<ol>
<li>大概是直接进行递归，终点是当前位为4，每一次返回<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>种类数</mtext><mi mathvariant="normal">%</mi><mn>1000000007</mn></mrow><annotation encoding="application/x-tex">种类数\%1000000007</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord cjk_fallback">种类数</span><span class="mord">%1000000007</span></span></span></span></li>
<li>中间要注意“出现1之后不能再次出现0”和“出现3之后不能再次出现2”的限制</li>
</ol>
<h4 id="我又改主意了。。。">我又改主意了。。。</h4>
<ol>
<li>这个题终点为位数达到n比较好吧</li>
<li>每一位加一次种类数，，似乎简单又可行</li>
<li>怎么回事我的数字这么大，哦原来是忘记了 <em>它的数字只包含0, 1, 2, 3，且这四个数字都出现过至少一次</em> 里面的 <em>且这四个数字都出现过至少一次</em>的要求</li>
<li>呀不简单，怎样才能保证每一个数都出现过呢</li>
<li>实现不了啊下一个</li>
</ol>
<h4 id="我，，绝望">我，，绝望</h4>
<p>我十分认真地怀疑，我又要用我蹩脚的dp来做这道题了，可是上一次的第三步还是做不到啊啊啊啊啊，搜答案去了<br>
呜呜呜为什么用dp这么简单</p>
<h5 id="把状态分类然后最终答案取使用过全部数字的状态类就可以了呀！！！！">把状态分类然后最终答案取使用过全部数字的状态类就可以了呀！！！！</h5>
<ol>
<li>显然第一位只能取2（0不让首位，1的话0就出现不了，3的话2就出现不了）由此类推，第二位只能取0，2，3，一直到出现了0之后才能取1，哦对了我们只需要知道第一位取啥就可以了，有了开头就行，后面的由上方加粗字体解决</li>
<li>状态分类可分为以下几种：（根据依赖关系可以得知有下面几种）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">第0种  使用过2，剩余0 1 3</span><br><span class="line"></span><br><span class="line">第1种 使用过0 2，剩余1 3</span><br><span class="line"></span><br><span class="line">第2种 使用过0 1 2，剩余3</span><br><span class="line"></span><br><span class="line">第3种 使用过0 2 3，剩余1</span><br><span class="line"></span><br><span class="line">第4种 使用过2 3，剩余0 1</span><br><span class="line"></span><br><span class="line">第5种 全部使用过</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>根据状态之间的转化进行递推</li>
<li>需要注意的是，不光<code>int</code>会爆，<code>long</code>也会，，只能用<code>long long</code></li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1000000007</span>; </span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a[<span class="number">1002</span>][<span class="number">6</span>];</span><br><span class="line"><span class="comment">/*        used      </span></span><br><span class="line"><span class="comment">a[][0]    2</span></span><br><span class="line"><span class="comment">a[][1]    2, 3       comfrom(2) or(2, 3)</span></span><br><span class="line"><span class="comment">a[][2]    0, 2       comfrom(2) or(0, 2)</span></span><br><span class="line"><span class="comment">a[][3]    0, 2, 3    comefrom( 0, 2) or ( 2, 3) or (0, 2 ,3)</span></span><br><span class="line"><span class="comment">a[][4]    0, 1, 2    comefrom(0,2) or (0, 1, 2) </span></span><br><span class="line"><span class="comment">a[][5]    0, 1, 2, 3 comefrom(0, 2, 3) or (0, 1, 2) or (0, 1, 2, 3)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="built_in">sizeof</span>(a));</span><br><span class="line"><span class="comment">//	a[1][0] = 1;// the start</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		a[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">		a[i][<span class="number">1</span>] = (a[i - <span class="number">1</span>][<span class="number">0</span>] + a[i - <span class="number">1</span>][<span class="number">1</span>]) % mod;</span><br><span class="line">		a[i][<span class="number">2</span>] = (a[i - <span class="number">1</span>][<span class="number">0</span>] + a[i - <span class="number">1</span>][<span class="number">2</span>] * <span class="number">2</span>) % mod;</span><br><span class="line">		a[i][<span class="number">3</span>] = (a[i - <span class="number">1</span>][<span class="number">2</span>] + a[i - <span class="number">1</span>][<span class="number">1</span>] + a[i - <span class="number">1</span>][<span class="number">3</span>] * <span class="number">2</span>) % mod;</span><br><span class="line">		a[i][<span class="number">4</span>] = (a[i - <span class="number">1</span>][<span class="number">2</span>] + a[i - <span class="number">1</span>][<span class="number">4</span>] * <span class="number">2</span>) % mod;</span><br><span class="line">		a[i][<span class="number">5</span>] = (a[i - <span class="number">1</span>][<span class="number">3</span>] + a[i - <span class="number">1</span>][<span class="number">4</span>]  + a[i - <span class="number">1</span>][<span class="number">5</span>] * <span class="number">2</span>) % mod;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; a[n][<span class="number">5</span>] % mod;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>此处纪念一下错误代码3号：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include &lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string&gt;</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">using namespace std;</span></span><br><span class="line"><span class="comment">int n;</span></span><br><span class="line"><span class="comment">long ans = 0;</span></span><br><span class="line"><span class="comment">const int mod = 1000000007;</span></span><br><span class="line"><span class="comment">void dfs(int add, bool haveone, bool havethree, int tot)&#123;</span></span><br><span class="line"><span class="comment">	if(tot == n) return;</span></span><br><span class="line"><span class="comment">	ans = (ans + add % mod) % mod;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt;&quot;tot = &quot; &lt;&lt; tot &lt;&lt; &quot;   add:&quot; &lt;&lt; add &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	if(!haveone &amp;&amp; !havethree)&#123;// no limit</span></span><br><span class="line"><span class="comment">		dfs(2, false, false, tot + 1);//0 2</span></span><br><span class="line"><span class="comment">		dfs(1, false, true, tot + 1);//3</span></span><br><span class="line"><span class="comment">		dfs(1, true, false, tot + 1);//1</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">	else if(haveone &amp;&amp; !havethree)&#123;//no 0 but can 2</span></span><br><span class="line"><span class="comment">		dfs(2, true, false, tot + 1);//1 2</span></span><br><span class="line"><span class="comment">		dfs(1, true, true, tot + 1);//3</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">	else if(!haveone &amp;&amp; havethree)&#123;//no 2 but can 0</span></span><br><span class="line"><span class="comment">		dfs(2, false, true, tot + 1);//0 3</span></span><br><span class="line"><span class="comment">		dfs(1, true, true, tot + 1);//1</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">int main()&#123;</span></span><br><span class="line"><span class="comment">	scanf(&quot;%d&quot;, &amp;n);</span></span><br><span class="line"><span class="comment">//	if(n == 4) &#123;</span></span><br><span class="line"><span class="comment">//		printf(&quot;3\n&quot;);</span></span><br><span class="line"><span class="comment">//		return 0;	</span></span><br><span class="line"><span class="comment">//	&#125;</span></span><br><span class="line"><span class="comment">	dfs(1, false, false, 0);//2 </span></span><br><span class="line"><span class="comment">	cout &lt;&lt; endl &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	dfs(1, false, true, 0);// 3</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; endl &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	dfs(1, true, false, 0);// 1</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; endl &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	cout &lt;&lt; ans &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">	return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="T5-就是简单的搜索问题">T5  就是简单的搜索问题</h4>
<p>不行写了一点太困了明天写。</p>
]]></content>
      <categories>
        <category>yxt</category>
      </categories>
      <tags>
        <tag>csp ccf 模拟练习</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑卡顿治疗方案</title>
    <url>/2022/05/01/%E7%94%B5%E8%84%91%E5%8D%A1%E9%A1%BF%E6%B2%BB%E7%96%97%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<blockquote>
<p>原本，这是一个美好的上午，yxt打开了她的B站和python准备学习RNN，然后，打开了好久好久好久，，，，<br>
迫不得已开始整顿卡机过分的电脑</p>
</blockquote>
<h2 id="操作">操作</h2>
<h3 id="一、禁用无用的开机启动程序">一、禁用无用的开机启动程序</h3>
<ol>
<li>打开任务管理器（这玩意儿我都打不开了mdzz）</li>
<li>选择启动栏<br>
<img src="https://img-blog.csdnimg.cn/20210115104014607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>把乱七八糟没用的东西取消自动启动（如下图所示）<br>
<img src="https://img-blog.csdnimg.cn/20210115104342292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
<h3 id="二、给系统盘（C盘）留有足够空间">二、给系统盘（C盘）留有足够空间</h3>
<p>方法如下：</p>
<ol>
<li>
<p>安装软件时不要一路点下去，会给安到C盘（发现自己只有C盘的可怜孩子表示迷惑）<img src="https://img-blog.csdnimg.cn/20210115110153704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li>
<p>保持桌面的干净（桌面也是C盘下的文件夹）（尽量只有软件链接和临时文件）</p>
</li>
<li>
<p>定期清理系统盘：</p>
<p>· 打开 “我的电脑”<br>
· 选中系统盘的 “属性”<br>
<img src="https://img-blog.csdnimg.cn/20210115110945904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>
· 点击磁盘清理，选中自己需要清理的地方然后按提示进行即可<br>
<img src="https://img-blog.csdnimg.cn/20210115111233833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
</ol>
<h3 id="三、加装固态硬盘">三、加装固态硬盘</h3>
<h1>此乃终极大法！！！</h1>
<h3 id="四、禁用win10的自动更新">四、禁用win10的自动更新</h3>
<ol>
<li>按下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>I</mi><mi>N</mi><mo>+</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">WIN+R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>，输入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>p</mi><mi>e</mi><mi>d</mi><mi>i</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>m</mi><mi>s</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">gpedit.msc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mord mathnormal">m</span><span class="mord mathnormal">sc</span></span></span></span>，打开组策略</li>
<li>展开计算机配置下的“管理模板”</li>
<li>在下拉列表中选择“Windows组件”</li>
<li>在右侧找到“Windows更新”，并双击打开</li>
<li>找到“配置自动更新一项”，并将其禁用</li>
<li>之后重启电脑</li>
<li>当设置中出现“某些设置由你的组织来管理”就成功啦</li>
</ol>
<h3 id="五、关掉多余的系统动画">五、关掉多余的系统动画</h3>
<p>不我拒绝，用得到再去看<a href="https://www.bilibili.com/video/BV19t411X7Mg/?spm_id_from=333.788.videocard.6">B站某链接</a></p>
<h1>软件</h1>
<p>火绒（校园网禁用警告）（杀毒的）<br>
CCcleaner（打扫的）<br>
Dism++（小管家）</p>
]]></content>
      <categories>
        <category>yxt</category>
      </categories>
      <tags>
        <tag>整治电脑</tag>
      </tags>
  </entry>
  <entry>
    <title>在学习和使用SQL中遇到的一些知识</title>
    <url>/2022/04/29/%E5%9C%A8%E5%AD%A6%E4%B9%A0%E5%92%8C%E4%BD%BF%E7%94%A8SQL%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p><font color=#900 size="7">注意：使用的数据库为 <strong>Oracle</strong> </font></p>
<ol>
<li>
<p>做 union 运算的表之间不可以相互引用</p>
</li>
<li>
<p><code>nvl</code> 函数可以将输入参数为空时转换为一特定值，如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">nvl(data, argu)</span><br></pre></td></tr></table></figure>
<p>表示当 <code>data</code> 为 <code>NULL</code> 时则返回 <code>argu</code>，如果不为 <code>NULL</code> 则返回 <code>data</code>。</p>
</li>
<li>
<p>SELECT 中的涉及到子查询的列或者用了函数的列之间不可以直接相互引用（这里说的可能不是很清楚），比如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> score, <span class="built_in">COUNT</span>(<span class="operator">*</span>) count1,  <span class="comment">--注意：oracle 中别名是不用 as 的</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> student_score</span><br><span class="line">   <span class="keyword">WHERE</span> score <span class="operator">&gt;=</span> <span class="number">60</span>) count0,</span><br><span class="line">(count1 <span class="operator">/</span> count0) percentage</span><br><span class="line"><span class="keyword">FROM</span> student_score</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> score;</span><br></pre></td></tr></table></figure>
<p>在这种情况下，是会报错的。若想在 percentage 列用到 count1 和 count0 的一个解决办法是，直接把 count1 和 count0 的定义复制过去（代码如下）。虽然这样比较繁琐，但是目前没有发现其他解决方法。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> score, <span class="built_in">COUNT</span>(<span class="operator">*</span>) count1,</span><br><span class="line"> 	(<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line">	<span class="keyword">FROM</span> student_score</span><br><span class="line">	<span class="keyword">WHERE</span> score <span class="operator">&gt;=</span> <span class="number">60</span>) count0,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">/</span></span><br><span class="line">    (<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line">     <span class="keyword">FROM</span> student_score</span><br><span class="line">     <span class="keyword">WHERE</span> score <span class="operator">&gt;=</span> <span class="number">60</span>) <span class="operator">*</span> <span class="number">100</span> percentage</span><br><span class="line"><span class="keyword">FROM</span> student_score</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> score;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>两个表 <code>NATURAL JOIN</code> 后得到的  表是不能起别名的，而且参与自然连接的两个表也无法被引用。（其它的连接行不行，我并没有尝试，不够我猜应该也是不行的）<br>
示例代码：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c.id</span><br><span class="line"><span class="keyword">FROM</span> (a <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> b) c;</span><br><span class="line"><span class="comment">--会报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> a.id</span><br><span class="line"><span class="keyword">FROM</span> a <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> b</span><br><span class="line"><span class="comment">--会报错</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="https://github-blogger-1311607435.cos.ap-nanjing.myqcloud.com/blogger-picture/oracle_logo.webp" alt="logo"></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>给爷爬!</title>
    <url>/2022/05/01/%E7%BB%99%E7%88%B7%E7%88%AC/</url>
    <content><![CDATA[<blockquote>
<p>芜湖，我来学习爬虫啦。希望能够永远不吃牢饭并且顺利完成学长的任务呢！</p>
</blockquote>
<p>学习入口：<a href="https://www.bilibili.com/video/BV12E411A7ZQ?p=16&amp;spm_id_from=pageDriver">B站Python爬虫基础五天速成</a></p>
<h3 id="准备工作：">准备工作：</h3>
<p>1.了解网页相关信息：<br>
这里讲了很多，但是估计后面实践时才能用到</p>
<p>2.准备引入包：</p>
<ul>
<li>包：<br>
bs4：网页解析，获取数据<br>
re：正则表达式，进行文字匹配<br>
urllib.request，urllib.error：指定URL，获取网页数据<br>
xlwt：进行excel操作<br>
sqlite3：进行SQLite数据库操作</li>
<li>引入方式：<br>
pip XX（XX指要安装的包）【中途断开得重安】<br>
我现在用的是jupyter Notebook，所以直接敲就可以（我甚至觉得不需要另外导入），别的应该是在下面控制面板写入（嫌慢可以用镜像安装我记得清华那个挺快的）？然后可以用setting查看</li>
</ul>
<h3 id="构建流程">构建流程</h3>
<p>大致框架：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created on Mon Feb  8 23:17:19 2021</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: 86155</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> Beautiful4<span class="comment">#网页解析，获取数据</span></span><br><span class="line"><span class="keyword">import</span> re<span class="comment">#正则表达式，进行文字匹配</span></span><br><span class="line"><span class="keyword">import</span> urllib.request, urllib.error<span class="comment">#制定URL，获取网页数据</span></span><br><span class="line"><span class="keyword">import</span> xlwt<span class="comment">#进行excel操作</span></span><br><span class="line"><span class="keyword">import</span> sqlite3<span class="comment">#进行SQLite数据库操作</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment">#首先要有一个基本的url</span></span><br><span class="line">    baseurl = <span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span><span class="comment">#这里单引号和双引号都可以,start=可以不写，会默认从0开始</span></span><br><span class="line">    savepass = <span class="string">&quot;.\\豆瓣电影Top250.xls&quot;</span><span class="comment">#.表示当前文件夹下，不用//转义的话就前加r，这里.xls表示以excel形式存储</span></span><br><span class="line">    <span class="comment">#1.爬取网页</span></span><br><span class="line">    datalist = getData(baseurl)</span><br><span class="line">    <span class="comment">#2.解析数据(理论上是逐一解析，所以一般和爬取同时进行)</span></span><br><span class="line">    <span class="comment">#3.保存数据</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#1.爬取网页</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getData</span>(<span class="params">baseurl</span>):</span><br><span class="line">    datalist = []</span><br><span class="line">    <span class="comment">#2.解析数据</span></span><br><span class="line">    <span class="keyword">return</span> datalist</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.保存数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">saveData</span>(<span class="params">savepath</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name == <span class="string">&quot;__main__&quot;</span>:<span class="comment">#当程序执行时</span></span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h4 id="1-爬取网络">1.爬取网络</h4>
<p>1)<strong>得到一个指定url的网页内容</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#得到一个指定url的网页内容</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">askURL</span>(<span class="params">url</span>):</span><br><span class="line">    head = &#123;<span class="comment">#模拟浏览器头部信息向豆瓣服务器发送消息</span></span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">    <span class="comment">#用户代理，表示告诉豆瓣服务器我们是什么类型的机器、浏览器（本质上是告诉浏览器我们可以接受什么水平的文件内容）</span></span><br><span class="line"><span class="comment">#    head[&quot;&quot;] = </span></span><br><span class="line">    <span class="comment">#具体发送消息：</span></span><br><span class="line">    request = urllib.request.Request(url, headers = head)</span><br><span class="line">    html = <span class="string">&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = urllib.request.urlopen(request)</span><br><span class="line">        html = response.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(html)</span><br><span class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&quot;code&quot;</span>):</span><br><span class="line">            <span class="built_in">print</span>(e.code)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&quot;reason&quot;</span>):</span><br><span class="line">            <span class="built_in">print</span>(e.reason)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#    return html</span></span><br></pre></td></tr></table></figure>
<p>虽然不知道为什么，教程那边没成功并显示了418但是我这里一遍过了<br>
哦知道为哈了，教程里格式不太对，粘贴过来时换行解决了空格忘删了</p>
<p>结合：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment">#首先要有一个基本的url</span></span><br><span class="line">    baseurl = <span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span><span class="comment">#这里单引号和双引号都可以,start=可以不写，会默认从0开始</span></span><br><span class="line">    savepass = <span class="string">&quot;.\\豆瓣电影Top250.xls&quot;</span><span class="comment">#.表示当前文件夹下，不用//转义的话就前加r，这里.xls表示以excel形式存储</span></span><br><span class="line">    <span class="comment">#1.爬取网页</span></span><br><span class="line">    datalist = getData(baseurl)</span><br><span class="line">    askURL(baseurl)</span><br><span class="line">    <span class="comment">#2.解析数据(理论上是逐一解析，所以一般和爬取同时进行)</span></span><br><span class="line">    <span class="comment">#3.保存数据</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#1.爬取网页</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getData</span>(<span class="params">baseurl</span>):</span><br><span class="line">    datalist = []</span><br><span class="line">    <span class="comment">#2.解析数据</span></span><br><span class="line">    <span class="keyword">return</span> datalist</span><br></pre></td></tr></table></figure>
<p>运行，<br>
然后你就可以得到：（太长了大致看一下即可）<br>
<img src="https://img-blog.csdnimg.cn/20210210114220358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>
2)进行多个网页的爬取（此时体现了把askURL单独放作一个函数的重要性）<br>
对了，不要忘记把askURL中的return部分取消掉注释</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.爬取网页</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getData</span>(<span class="params">baseurl</span>):</span><br><span class="line">    datalist = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):<span class="comment">#调用获取页面信息的函数10次，每次获取25条</span></span><br><span class="line">        url = baseurl + <span class="built_in">str</span>(i * <span class="number">25</span>)<span class="comment">#不得不说直接*25真实太妙了(完美实现左闭右开)</span></span><br><span class="line">        html = askURL(url)<span class="comment">#保存获取到的源码</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#2.逐一解析数据</span></span><br><span class="line">    <span class="keyword">return</span> datalist</span><br></pre></td></tr></table></figure>
<h4 id="2-解析数据">2.解析数据</h4>
<p>其实是在爬取网页的部分进行的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#2.逐一解析数据</span></span><br><span class="line">       soup = BeautifulSoup(html, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">       <span class="comment">#查找符合要求的字符串，形成列表</span></span><br><span class="line">       <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&quot;div&quot;</span>, class_ = <span class="string">&quot;item&quot;</span>):<span class="comment">#注意class后面要加下划线，因为他是个类别</span></span><br><span class="line">           <span class="comment">#print(item)#测试，查看电影item全部信息，方便起见把后面的print删了，把range改成0~1</span></span><br><span class="line">           data = []<span class="comment">#保存一部电影的所有信息</span></span><br><span class="line">           item = <span class="built_in">str</span>(item)</span><br><span class="line">           <span class="comment">#影片详情的链接</span></span><br><span class="line">           link = re.findall(findLink, item)[<span class="number">0</span>]<span class="comment">#使用re库通过正则表达式查找指定的字符串</span></span><br><span class="line">           data.append(link)<span class="comment">#添加链接</span></span><br><span class="line">           imgSrc = re.findall(findImgSrc, item)[<span class="number">0</span>]</span><br><span class="line">           data.append(imgSrc)<span class="comment">#添加图片</span></span><br><span class="line">           titles = re.findall(findTitle, item)<span class="comment">#片名可能只有中文名没有外国名</span></span><br><span class="line">           <span class="keyword">if</span>(<span class="built_in">len</span>(titles) == <span class="number">2</span>):</span><br><span class="line">               ctitle = titles[<span class="number">0</span>]</span><br><span class="line">               data.append(ctitle)     <span class="comment">#添加中文名</span></span><br><span class="line">               otitle = titles[<span class="number">1</span>].replace(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;&quot;</span>)<span class="comment">#注意细节，去掉无关符号</span></span><br><span class="line">               data.append(otitle)     <span class="comment">#添加外国名</span></span><br><span class="line">           <span class="keyword">else</span>:</span><br><span class="line">               data.append(titles[<span class="number">0</span>])</span><br><span class="line">               data.append(<span class="string">&quot; &quot;</span>)<span class="comment">#因为后期要进入数据库所以即使是空的也要留位置#外国名字留空</span></span><br><span class="line">               </span><br><span class="line">           rating = re.findall(findRating, item)[<span class="number">0</span>]</span><br><span class="line">           data.append(rating)<span class="comment">#添加评分</span></span><br><span class="line"> </span><br><span class="line">           judgeNum = re.findall(findJudge, item)[<span class="number">0</span>]</span><br><span class="line">           data.append(judgeNum)<span class="comment">#添加评价人数</span></span><br><span class="line">           </span><br><span class="line">           inq = re.findall(findInq, item)<span class="comment">#注意没有[0]</span></span><br><span class="line">           <span class="keyword">if</span> <span class="built_in">len</span>(inq) != <span class="number">0</span>:</span><br><span class="line">               inq = inq[<span class="number">0</span>].replace(<span class="string">&quot;。&quot;</span>, <span class="string">&quot;&quot;</span>)<span class="comment">#去掉句号</span></span><br><span class="line">               <span class="comment">#&#x27;list&#x27; object has no attribute &#x27;replace&#x27;刚刚这里忘记加[0]了</span></span><br><span class="line">               data.append(inq)<span class="comment">#添加概述</span></span><br><span class="line">           <span class="keyword">else</span>:</span><br><span class="line">               data.append(<span class="string">&quot; &quot;</span>)<span class="comment">#留空</span></span><br><span class="line">           </span><br><span class="line">           bd = re.findall(findBd, item)[<span class="number">0</span>]</span><br><span class="line">           bd = re.sub(<span class="string">&quot;&lt;br(\s+)?/&gt;(\s+)?&quot;</span>, <span class="string">&quot; &quot;</span>, bd)<span class="comment">#去掉&lt;br/&gt;及其里面的内容</span></span><br><span class="line">           bd = re.sub(<span class="string">&quot;/&quot;</span>, <span class="string">&quot; &quot;</span>, bd)<span class="comment">#去掉/</span></span><br><span class="line">           <span class="comment">#其实都是替换而不是准确意义上的去掉</span></span><br><span class="line">           data.append(bd.strip())<span class="comment">#去掉前后的空格</span></span><br><span class="line">           </span><br><span class="line">           datalist.append(data)<span class="comment">#把处理好的一部电影信息放入datalist</span></span><br></pre></td></tr></table></figure>
<p>相应的，需要有以下全局变量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#影片详情链接的规则</span></span><br><span class="line">findLink = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;a href=&quot;(.*?)&quot;&gt;&#x27;</span>)    <span class="comment">#创建正则表达式对象，表示规则（字符串的模式）</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">根据</span></span><br><span class="line"><span class="string">&lt;div class=&quot;item&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;pic&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;em class=&quot;&quot;&gt;24&lt;/em&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;https://movie.douban.com/subject/3319755/&quot;&gt;</span></span><br><span class="line"><span class="string">中的</span></span><br><span class="line"><span class="string">&lt;a href=&quot;https://movie.douban.com/subject/3319755/&quot;&gt;</span></span><br><span class="line"><span class="string">来的</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">类似的 有：</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#影片图片</span></span><br><span class="line">findImgSrc = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;img.*src=&quot;(.*?)&quot;&#x27;</span>, re.S)<span class="comment">#re.S让那个换行符包含在字符中.又可以理解为忽视换行符直接匹配</span></span><br><span class="line"><span class="comment">#影片片名</span></span><br><span class="line">findTitle = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;title&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#影片评分</span></span><br><span class="line">findRating = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;rating_num&quot; property=&quot;v:average&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到评价人数</span></span><br><span class="line">findJudge = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span&gt;(\d*)人评价&lt;/span&gt;&#x27;</span>)<span class="comment">#不要漏了*</span></span><br><span class="line"><span class="comment">#找到概况</span></span><br><span class="line">findInq = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;inq&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到影片的相关内容</span></span><br><span class="line">findBd = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;p class=&quot;&quot;&gt;(.*)&lt;/p&gt;&#x27;</span>, re.S)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;不要漏了()&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="3-保存数据">3.保存数据</h4>
<p>先另开程序练手：<br>
<img src="https://img-blog.csdnimg.cn/2021021823453581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>
<img src="https://img-blog.csdnimg.cn/20210218234617801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>好玩的事情：<br>
按住<code>Ctrl</code> 单击函数名可以直接跳转<br>
<img src="https://img-blog.csdnimg.cn/20210218235042880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>
正文部分：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#3.保存数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">saveData</span>(<span class="params">datalist, savepath</span>):<span class="comment">#忽然发现datalist不是全局变量所以应该传入</span></span><br><span class="line">    book = xlwt.Workbook(encoding = <span class="string">&quot;utf-8&quot;</span>, style_compression = <span class="number">0</span>)<span class="comment">#创建workbook对象</span></span><br><span class="line">    sheet = book.add_sheet(<span class="string">&#x27;豆瓣电影top250&#x27;</span>, cell_overwrite_ok = <span class="literal">True</span>)<span class="comment">#创建工作表</span></span><br><span class="line">    col = (<span class="string">&quot;电影详情链接&quot;</span>,<span class="string">&quot;图片链接&quot;</span>,<span class="string">&quot;影片中文名&quot;</span>,<span class="string">&quot;影片外国名&quot;</span>,<span class="string">&quot;评分&quot;</span>,<span class="string">&quot;评价数&quot;</span>,<span class="string">&quot;概况&quot;</span>,<span class="string">&quot;相关信息&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">8</span>):</span><br><span class="line">        sheet.write(<span class="number">0</span>, i, col[i])<span class="comment">#列名</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">250</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%d&quot;</span>%i)</span><br><span class="line">        data = datalist[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">8</span>):</span><br><span class="line">            sheet.write(i + <span class="number">1</span>, j, data[j])<span class="comment">#数据</span></span><br><span class="line">    </span><br><span class="line">    book.save(savepath)<span class="comment">#保存,注意这里是我们已经传入的savepath路径而不是其他别的什么（就是提醒cv大法啦）</span></span><br></pre></td></tr></table></figure>
<h3 id="最后运行：">最后运行：</h3>
<p><img src="https://img-blog.csdnimg.cn/20210219001114920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210219001223311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUyNDE0NzI3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>
顺便粘贴一下源码全文吧，作为第一次爬虫的纪念芜湖，感谢视频老师手把手对待小白的教学：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created on Mon Feb  8 23:17:19 2021</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: 86155</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup<span class="comment">#网页解析，获取数据</span></span><br><span class="line"><span class="keyword">import</span> re<span class="comment">#正则表达式，进行文字匹配</span></span><br><span class="line"><span class="keyword">import</span> urllib.request, urllib.error<span class="comment">#制定URL，获取网页数据</span></span><br><span class="line"><span class="keyword">import</span> xlwt<span class="comment">#进行excel操作</span></span><br><span class="line"><span class="keyword">import</span> sqlite3<span class="comment">#进行SQLite数据库操作</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment">#首先要有一个基本的url</span></span><br><span class="line">    baseurl = <span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span><span class="comment">#这里单引号和双引号都可以,start=可以不写，会默认从0开始</span></span><br><span class="line">    <span class="comment">#1.爬取网页</span></span><br><span class="line">    datalist = getData(baseurl)</span><br><span class="line">    savepath = <span class="string">&quot;.\\豆瓣电影Top250.xls&quot;</span><span class="comment">#.表示当前文件夹下，不用//转义的话就前加r，这里.xls表示以excel形式存储</span></span><br><span class="line">    <span class="comment">#2.解析数据(理论上是逐一解析，所以一般和爬取同时进行)</span></span><br><span class="line">    <span class="comment">#3.保存数据</span></span><br><span class="line">    saveData(datalist, savepath)</span><br><span class="line">    <span class="comment">#askURL(baseurl)</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#影片详情链接的规则</span></span><br><span class="line">findLink = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;a href=&quot;(.*?)&quot;&gt;&#x27;</span>)    <span class="comment">#创建正则表达式对象，表示规则（字符串的模式）</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">根据</span></span><br><span class="line"><span class="string">&lt;div class=&quot;item&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;pic&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;em class=&quot;&quot;&gt;24&lt;/em&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&quot;https://movie.douban.com/subject/3319755/&quot;&gt;</span></span><br><span class="line"><span class="string">中的</span></span><br><span class="line"><span class="string">&lt;a href=&quot;https://movie.douban.com/subject/3319755/&quot;&gt;</span></span><br><span class="line"><span class="string">来的</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">类似的 有：</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#影片图片</span></span><br><span class="line">findImgSrc = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;img.*src=&quot;(.*?)&quot;&#x27;</span>, re.S)<span class="comment">#re.S让那个换行符包含在字符中.又可以理解为忽视换行符直接匹配</span></span><br><span class="line"><span class="comment">#影片片名</span></span><br><span class="line">findTitle = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;title&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#影片评分</span></span><br><span class="line">findRating = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;rating_num&quot; property=&quot;v:average&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到评价人数</span></span><br><span class="line">findJudge = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span&gt;(\d*)人评价&lt;/span&gt;&#x27;</span>)<span class="comment">#不要漏了*</span></span><br><span class="line"><span class="comment">#找到概况</span></span><br><span class="line">findInq = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;inq&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到影片的相关内容</span></span><br><span class="line">findBd = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;p class=&quot;&quot;&gt;(.*)&lt;/p&gt;&#x27;</span>, re.S)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;不要漏了()&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.爬取网页</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getData</span>(<span class="params">baseurl</span>):</span><br><span class="line">    datalist = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):<span class="comment">#调用获取页面信息的函数10次，每次获取25条</span></span><br><span class="line">        url = baseurl + <span class="built_in">str</span>(i * <span class="number">25</span>)<span class="comment">#不得不说直接*25真实太妙了(完美实现左闭右开)</span></span><br><span class="line">        html = askURL(url)<span class="comment">#保存获取到的源码</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">#2.逐一解析数据</span></span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        <span class="comment">#查找符合要求的字符串，形成列表</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&quot;div&quot;</span>, class_ = <span class="string">&quot;item&quot;</span>):<span class="comment">#注意class后面要加下划线，因为他是个类别</span></span><br><span class="line">            <span class="comment">#print(item)#测试，查看电影item全部信息，方便起见把后面的print删了，把range改成0~1</span></span><br><span class="line">            data = []<span class="comment">#保存一部电影的所有信息</span></span><br><span class="line">            item = <span class="built_in">str</span>(item)</span><br><span class="line">            <span class="comment">#影片详情的链接</span></span><br><span class="line">            link = re.findall(findLink, item)[<span class="number">0</span>]<span class="comment">#使用re库通过正则表达式查找指定的字符串</span></span><br><span class="line">            data.append(link)<span class="comment">#添加链接</span></span><br><span class="line">            imgSrc = re.findall(findImgSrc, item)[<span class="number">0</span>]</span><br><span class="line">            data.append(imgSrc)<span class="comment">#添加图片</span></span><br><span class="line">            titles = re.findall(findTitle, item)<span class="comment">#片名可能只有中文名没有外国名</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">len</span>(titles) == <span class="number">2</span>):</span><br><span class="line">                ctitle = titles[<span class="number">0</span>]</span><br><span class="line">                data.append(ctitle)     <span class="comment">#添加中文名</span></span><br><span class="line">                otitle = titles[<span class="number">1</span>].replace(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;&quot;</span>)<span class="comment">#注意细节，去掉无关符号</span></span><br><span class="line">                data.append(otitle)     <span class="comment">#添加外国名</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(titles[<span class="number">0</span>])</span><br><span class="line">                data.append(<span class="string">&quot; &quot;</span>)<span class="comment">#因为后期要进入数据库所以即使是空的也要留位置#外国名字留空</span></span><br><span class="line">                </span><br><span class="line">            rating = re.findall(findRating, item)[<span class="number">0</span>]</span><br><span class="line">            data.append(rating)<span class="comment">#添加评分</span></span><br><span class="line">  </span><br><span class="line">            judgeNum = re.findall(findJudge, item)[<span class="number">0</span>]</span><br><span class="line">            data.append(judgeNum)<span class="comment">#添加评价人数</span></span><br><span class="line">            </span><br><span class="line">            inq = re.findall(findInq, item)<span class="comment">#注意没有[0]</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(inq) != <span class="number">0</span>:</span><br><span class="line">                inq = inq[<span class="number">0</span>].replace(<span class="string">&quot;。&quot;</span>, <span class="string">&quot;&quot;</span>)<span class="comment">#去掉句号</span></span><br><span class="line">                <span class="comment">#&#x27;list&#x27; object has no attribute &#x27;replace&#x27;刚刚这里忘记加[0]了</span></span><br><span class="line">                data.append(inq)<span class="comment">#添加概述</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(<span class="string">&quot; &quot;</span>)<span class="comment">#留空</span></span><br><span class="line">            </span><br><span class="line">            bd = re.findall(findBd, item)[<span class="number">0</span>]</span><br><span class="line">            bd = re.sub(<span class="string">&quot;&lt;br(\s+)?/&gt;(\s+)?&quot;</span>, <span class="string">&quot; &quot;</span>, bd)<span class="comment">#去掉&lt;br/&gt;及其里面的内容</span></span><br><span class="line">            bd = re.sub(<span class="string">&quot;/&quot;</span>, <span class="string">&quot; &quot;</span>, bd)<span class="comment">#去掉/</span></span><br><span class="line">            <span class="comment">#其实都是替换而不是准确意义上的去掉</span></span><br><span class="line">            data.append(bd.strip())<span class="comment">#去掉前后的空格</span></span><br><span class="line">            </span><br><span class="line">            datalist.append(data)<span class="comment">#把处理好的一部电影信息放入datalist</span></span><br><span class="line">    <span class="comment">#print(datalist)#简要打印一下</span></span><br><span class="line">    <span class="keyword">return</span> datalist</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">askURL</span>(<span class="params">url</span>):</span><br><span class="line">    head = &#123;<span class="comment">#模拟浏览器头部信息向豆瓣服务器发送消息</span></span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">    <span class="comment">#用户代理，表示告诉豆瓣服务器我们是什么类型的机器、浏览器（本质上是告诉浏览器我们可以接受什么水平的文件内容）</span></span><br><span class="line"><span class="comment">#    head[&quot;&quot;] = </span></span><br><span class="line">    <span class="comment">#具体发送消息：</span></span><br><span class="line">    request = urllib.request.Request(url, headers = head)</span><br><span class="line">    html = <span class="string">&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = urllib.request.urlopen(request)</span><br><span class="line">        html = response.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        <span class="comment">#print(html)</span></span><br><span class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&quot;code&quot;</span>):</span><br><span class="line">            <span class="built_in">print</span>(e.code)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&quot;reason&quot;</span>):</span><br><span class="line">            <span class="built_in">print</span>(e.reason)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.保存数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">saveData</span>(<span class="params">datalist, savepath</span>):<span class="comment">#忽然发现datalist不是全局变量所以应该传入</span></span><br><span class="line">    book = xlwt.Workbook(encoding = <span class="string">&quot;utf-8&quot;</span>, style_compression = <span class="number">0</span>)<span class="comment">#创建workbook对象</span></span><br><span class="line">    sheet = book.add_sheet(<span class="string">&#x27;豆瓣电影top250&#x27;</span>, cell_overwrite_ok = <span class="literal">True</span>)<span class="comment">#创建工作表</span></span><br><span class="line">    col = (<span class="string">&quot;电影详情链接&quot;</span>,<span class="string">&quot;图片链接&quot;</span>,<span class="string">&quot;影片中文名&quot;</span>,<span class="string">&quot;影片外国名&quot;</span>,<span class="string">&quot;评分&quot;</span>,<span class="string">&quot;评价数&quot;</span>,<span class="string">&quot;概况&quot;</span>,<span class="string">&quot;相关信息&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">8</span>):</span><br><span class="line">        sheet.write(<span class="number">0</span>, i, col[i])<span class="comment">#列名</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">250</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%d&quot;</span>%i)</span><br><span class="line">        data = datalist[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">8</span>):</span><br><span class="line">            sheet.write(i + <span class="number">1</span>, j, data[j])<span class="comment">#数据</span></span><br><span class="line">    </span><br><span class="line">    book.save(savepath)<span class="comment">#保存,注意这里是我们已经传入的savepath路径而不是其他别的什么（就是提醒cv大法啦）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:<span class="comment">#当程序执行时</span></span><br><span class="line">    main()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;爬取完毕！芜湖&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>yxt</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
</search>
